--langdef=Hare
--langmap=Hare:.ha
--kinddef-Hare=f,function,functions
--kinddef-Hare=s,structure,structs
--kinddef-Hare=e,enum,enums
--kinddef-Hare=E,event,errors
--kinddef-Hare=c,const,consts
--kinddef-Hare=v,variable,variables
--kinddef-Hare=C,class,types
--regex-Hare=/^(export\s+)?fn\s+([a-zA-Z_][a-zA-Z0-9_]*)/\2/f/x
--regex-Hare=/^@test\s+fn\s+([a-zA-Z_][a-zA-Z0-9_]+)/\1/f/x
--regex-Hare=/^(export\s+)?type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*struct\s*\{/\2/s/x
--regex-Hare=/^(export\s+)?type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*union\s*\{/\2/s/x
--regex-Hare=/^(export\s+)?type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*enum\s+/\2/e/x
--regex-Hare=/^(export\s+)?type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*!/\2/E/x
--regex-Hare=/^(export\s+)?type\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=/\2/C/x
--regex-Hare=/^(export\s+)?def\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*[:=]/\2/c/x
--regex-Hare=/^(export\s+)?const\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*[:=]/\2/c/x
--regex-Hare=/^(export\s+)?let\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*[:=]/\2/v/x
